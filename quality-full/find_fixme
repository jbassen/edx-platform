---> pavelib.quality.find_fixme
---> pavelib.prereqs.install_python_prereqs
Python prereqs unchanged, skipping...
PYTHONPATH=lms:lms/libcommon/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" lms branding bulk_email certificates circuit class_dashboard commerce course_structure_api course_wiki courseware dashboard debug django_comment_client edxnotes foldit instructor instructor_analytics instructor_task licenses lms_migration lms_xblock mobile_api notes notification_prefs notifier_api oauth2_handler open_ended_grading psychometrics shoppingcart static_template_view staticbook student_account survey theming verify_student comment_client courseware_search newrelic_logging xblock | tee /edx/app/edxapp/edx-platform/reports/lms/pylint_fixme.report
************* Module branding
branding:1: [F0001(fatal), ] No module named branding
************* Module bulk_email
bulk_email:1: [F0001(fatal), ] No module named bulk_email
************* Module certificates
certificates:1: [F0001(fatal), ] No module named certificates
************* Module circuit
circuit:1: [F0001(fatal), ] No module named circuit
************* Module class_dashboard
class_dashboard:1: [F0001(fatal), ] No module named class_dashboard
************* Module commerce
commerce:1: [F0001(fatal), ] No module named commerce
************* Module course_structure_api
course_structure_api:1: [F0001(fatal), ] No module named course_structure_api
************* Module course_wiki
course_wiki:1: [F0001(fatal), ] No module named course_wiki
************* Module courseware
courseware:1: [F0001(fatal), ] No module named courseware
************* Module dashboard
dashboard:1: [F0001(fatal), ] No module named dashboard
************* Module debug
debug:1: [F0001(fatal), ] No module named debug
************* Module django_comment_client
django_comment_client:1: [F0001(fatal), ] No module named django_comment_client
************* Module edxnotes
edxnotes:1: [F0001(fatal), ] No module named edxnotes
************* Module foldit
foldit:1: [F0001(fatal), ] No module named foldit
************* Module instructor
instructor:1: [F0001(fatal), ] No module named instructor
************* Module instructor_analytics
instructor_analytics:1: [F0001(fatal), ] No module named instructor_analytics
************* Module instructor_task
instructor_task:1: [F0001(fatal), ] No module named instructor_task
************* Module licenses
licenses:1: [F0001(fatal), ] No module named licenses
************* Module lms_migration
lms_migration:1: [F0001(fatal), ] No module named lms_migration
************* Module lms_xblock
lms_xblock:1: [F0001(fatal), ] No module named lms_xblock
************* Module mobile_api
mobile_api:1: [F0001(fatal), ] No module named mobile_api
************* Module notes
notes:1: [F0001(fatal), ] No module named notes
************* Module notification_prefs
notification_prefs:1: [F0001(fatal), ] No module named notification_prefs
************* Module notifier_api
notifier_api:1: [F0001(fatal), ] No module named notifier_api
************* Module oauth2_handler
oauth2_handler:1: [F0001(fatal), ] No module named oauth2_handler
************* Module open_ended_grading
open_ended_grading:1: [F0001(fatal), ] No module named open_ended_grading
************* Module psychometrics
psychometrics:1: [F0001(fatal), ] No module named psychometrics
************* Module shoppingcart
shoppingcart:1: [F0001(fatal), ] No module named shoppingcart
************* Module static_template_view
static_template_view:1: [F0001(fatal), ] No module named static_template_view
************* Module staticbook
staticbook:1: [F0001(fatal), ] No module named staticbook
************* Module student_account
student_account:1: [F0001(fatal), ] No module named student_account
************* Module survey
survey:1: [F0001(fatal), ] No module named survey
************* Module theming
theming:1: [F0001(fatal), ] No module named theming
************* Module verify_student
verify_student:1: [F0001(fatal), ] No module named verify_student
************* Module comment_client
comment_client:1: [F0001(fatal), ] No module named comment_client
************* Module courseware_search
courseware_search:1: [F0001(fatal), ] No module named courseware_search
************* Module newrelic_logging
newrelic_logging:1: [F0001(fatal), ] No module named newrelic_logging
************* Module lms.urls
lms/urls.py:36: [W0511(fixme), ] TODO: Is this used anymore? What is STATIC_GRAB?
lms/urls.py:49: [W0511(fixme), ] TODO: Replace with Mako-ized views
lms/urls.py:184: [W0511(fixme), ] TODO: (bridger) The copyright has been removed until it is updated for edX
lms/urls.py:262: [W0511(fixme), ] TODO: for now, this is the endpoint of an ajax replay
lms/urls.py:274: [W0511(fixme), ] TODO: These views need to be updated before they work
lms/urls.py:276: [W0511(fixme), ] TODO: We should probably remove the circuit package. I believe it was only used in the old way of saving wiki circuits for the wiki
lms/urls.py:301: [W0511(fixme), ] TODO arjun remove when custom tabs in place, see courseware/courses.py
************* Module lms.djangoapps.bulk_email.forms
lms/djangoapps/bulk_email/forms.py:40: [W0511(fixme), ] TODO: add more validation here, including the set of known tags
************* Module lms.djangoapps.certificates.queue
lms/djangoapps/certificates/queue.py:123: [W0511(fixme), ] TODO: when del_cert is implemented and plumbed through certificates
************* Module lms.djangoapps.commerce.tests
lms/djangoapps/commerce/tests.py:82: [W0511(fixme), ] TODO Verify this is the best method to create CourseMode objects.
lms/djangoapps/commerce/tests.py:83: [W0511(fixme), ] TODO Find/create constants for the modes.
lms/djangoapps/commerce/tests.py:111: [W0511(fixme), ] TODO Test inactive courses, and those not open for enrollment.
lms/djangoapps/commerce/tests.py:203: [W0511(fixme), ] TODO Eventually we should NOT be enrolling users directly from this view.
************* Module lms.djangoapps.commerce.views
lms/djangoapps/commerce/views.py:136: [W0511(fixme), ] TODO Before this functionality is fully rolled-out, this branch should be updated to NOT enroll the
************* Module lms.djangoapps.course_wiki.editors
lms/djangoapps/course_wiki/editors.py:28: [W0511(fixme), ] TODO use the help_text field of edit form instead of rendering a template
************* Module lms.djangoapps.courseware.courses
lms/djangoapps/courseware/courses.py:65: [W0511(fixme), ] TODO please rename this function to get_course_by_key at next opportunity!
lms/djangoapps/courseware/courses.py:188: [W0511(fixme), ] TODO: Remove number, instructors from this list
lms/djangoapps/courseware/courses.py:294: [W0511(fixme), ] TODO: Fix this such that these are pulled in as extra course-specific tabs.
lms/djangoapps/courseware/courses.py:338: [W0511(fixme), ] TODO: Clean up how 'error' is done.
************* Module lms.djangoapps.courseware.grades
lms/djangoapps/courseware/grades.py:206: [W0511(fixme), ] TODO: We need the request to pass into here. If we could forego that, our arguments
lms/djangoapps/courseware/grades.py:298: [W0511(fixme), ] TODO: This method is not very good. It was written in the old course style and
lms/djangoapps/courseware/grades.py:326: [W0511(fixme), ] TODO: We need the request to pass into here. If we could
************* Module lms.djangoapps.courseware.module_render
lms/djangoapps/courseware/module_render.py:83: [W0511(fixme), ] TODO: course_id and course_key are used interchangeably in this file, which is wrong.
lms/djangoapps/courseware/module_render.py:307: [W0511(fixme), ] TODO: Queuename should be derived from 'course_settings.json' of each course
lms/djangoapps/courseware/module_render.py:348: [W0511(fixme), ] TODO: fix this so that make_xqueue_callback uses the descriptor passed into
lms/djangoapps/courseware/module_render.py:526: [W0511(fixme), ] TODO (cpennington): When modules are shared between courses, the static
lms/djangoapps/courseware/module_render.py:581: [W0511(fixme), ] TODO (cpennington): Figure out how to share info between systems
lms/djangoapps/courseware/module_render.py:587: [W0511(fixme), ] TODO (cpennington): This should be removed when all html from
lms/djangoapps/courseware/module_render.py:614: [W0511(fixme), ] TODO: When we merge the descriptor and module systems, we can stop reaching into the mixologist (cpennington)
************* Module lms.djangoapps.courseware.views
lms/djangoapps/courseware/views.py:91: [W0511(fixme), ] TODO: Rewrite in Django
lms/djangoapps/courseware/views.py:279: [W0511(fixme), ] TODO: clearly this needs to be something other than the username
lms/djangoapps/courseware/views.py:355: [W0511(fixme), ] TODO (vshnayder): do course instructors need to be registered to see course?
lms/djangoapps/courseware/views.py:733: [W0511(fixme), ] TODO arjun: remove when custom tabs in place, see courseware/syllabus.py
************* Module lms.djangoapps.courseware.management.commands.export_course
lms/djangoapps/courseware/management/commands/export_course.py:87: [W0511(fixme), ] TODO: Once we support courses with unicode characters, we will need to revisit this.
************* Module lms.djangoapps.courseware.tests.factories
lms/djangoapps/courseware/tests/factories.py:11: [I0012(locally-enabled), ] Locally enabling unused-import (W0611)
lms/djangoapps/courseware/tests/factories.py:122: [I0012(locally-enabled), ] Locally enabling unused-argument (W0613)
lms/djangoapps/courseware/tests/factories.py:28: [W0511(fixme), ] TODO fix this (course_id and location are invalid names as constants, and course_id should really be COURSE_KEY)
************* Module lms.djangoapps.courseware.tests.test_access
lms/djangoapps/courseware/tests/test_access.py:117: [W0511(fixme), ] TODO: override DISABLE_START_DATES and test the start date branch of the method
************* Module lms.djangoapps.courseware.tests.test_courses
lms/djangoapps/courseware/tests/test_courses.py:154: [W0511(fixme), ] TODO: this test relies on the specific setup of the toy course.
************* Module lms.djangoapps.courseware.tests.test_module_render
lms/djangoapps/courseware/tests/test_module_render.py:80: [W0511(fixme), ] TODO: this test relies on the specific setup of the toy course.
************* Module lms.djangoapps.courseware.tests.test_view_authentication
lms/djangoapps/courseware/tests/test_view_authentication.py:90: [W0511(fixme), ] TODO (vshnayder): If this is not the behavior we want, will need
************* Module lms.djangoapps.courseware.tests.test_views
lms/djangoapps/courseware/tests/test_views.py:225: [W0511(fixme), ] TODO add a test for invalid location
lms/djangoapps/courseware/tests/test_views.py:226: [W0511(fixme), ] TODO add a test for no data *
lms/djangoapps/courseware/tests/test_views.py:258: [W0511(fixme), ] TODO: Remove the dependency on MakoMiddleware (by making the views explicitly supply a RequestContext)
lms/djangoapps/courseware/tests/test_views.py:286: [W0511(fixme), ] TODO: this needs to be changed once we figure out how to
************* Module lms.djangoapps.django_comment_client.utils
lms/djangoapps/django_comment_client/utils.py:43: [W0511(fixme), ] TODO should we be checking if d1 and d2 have the same keys with different values?
lms/djangoapps/django_comment_client/utils.py:214: [W0511(fixme), ] TODO.  BUG! : course location is not unique across multiple course runs!
lms/djangoapps/django_comment_client/utils.py:300: [W0511(fixme), ] TODO: RENAME
lms/djangoapps/django_comment_client/utils.py:318: [W0511(fixme), ] TODO: RENAME
************* Module lms.djangoapps.django_comment_client.base.views
lms/djangoapps/django_comment_client/base/views.py:639: [W0511(fixme), ] TODO authorization
************* Module lms.djangoapps.django_comment_client.forum.tests
lms/djangoapps/django_comment_client/forum/tests.py:364: [W0511(fixme), ] TODO: update this once django cache is disabled in tests
************* Module lms.djangoapps.django_comment_client.forum.views
lms/djangoapps/django_comment_client/forum/views.py:98: [W0511(fixme), ] TODO: After the comment service is updated this can just be user.default_sort_key because the service returns the default value
lms/djangoapps/django_comment_client/forum/views.py:233: [W0511(fixme), ] TODO: Standardize on 'discussion_data' vs 'threads'
lms/djangoapps/django_comment_client/forum/views.py:345: [W0511(fixme), ] TODO: What is this?
lms/djangoapps/django_comment_client/forum/views.py:350: [W0511(fixme), ] TODO: Why pass both course and course.id to template?
lms/djangoapps/django_comment_client/forum/views.py:378: [W0511(fixme), ] TODO: Allow sorting?
lms/djangoapps/django_comment_client/forum/views.py:490: [W0511(fixme), ] TODO remove non-AJAX support, it does not appear to be used and does not appear to work.
************* Module lms.djangoapps.foldit.views
lms/djangoapps/foldit/views.py:91: [W0511(fixme), ] TODO: is this the right string?
lms/djangoapps/foldit/views.py:170: [W0511(fixme), ] TODO: this is just in this request...
************* Module lms.djangoapps.instructor.enrollment
lms/djangoapps/instructor/enrollment.py:258: [W0511(fixme), ] TODO: Use request.build_absolute_uri rather than '{proto}://{site}{path}'.format
************* Module lms.djangoapps.instructor.hint_manager
lms/djangoapps/instructor/hint_manager.py:93: [W0511(fixme), ] FIXME: we need to figure out how to do this with opaque keys
************* Module lms.djangoapps.instructor.tests.test_api
lms/djangoapps/instructor/tests/test_api.py:254: [W0511(fixme), ] TODO: make these work
lms/djangoapps/instructor/tests/test_api.py:281: [W0511(fixme), ] TODO: make these work
lms/djangoapps/instructor/tests/test_api.py:292: [W0511(fixme), ] TODO: make this work
************* Module lms.djangoapps.instructor.views.api
lms/djangoapps/instructor/views/api.py:1438: [W0511(fixme), ] TODO: the User.objects query and CSV generation here could be
************* Module lms.djangoapps.instructor.views.legacy
lms/djangoapps/instructor/views/legacy.py:757: [W0511(fixme), ] TODO (ichuang) encode Score as dict instead of as list, so score[0] -> score['earned']
lms/djangoapps/instructor/views/legacy.py:825: [W0511(fixme), ] TODO: Use request.build_absolute_uri rather than '{proto}://{site}{path}'.format
************* Module lms.djangoapps.licenses.models
lms/djangoapps/licenses/models.py:47: [W0511(fixme), ] TODO: temporary fix for when somehow a user got more that one license.
lms/djangoapps/licenses/models.py:80: [W0511(fixme), ] TODO [rocha]look if someone has unenrolled from the class
************* Module lms.djangoapps.lms_migration.management.commands.create_groups
lms/djangoapps/lms_migration/management/commands/create_groups.py:38: [W0511(fixme), ] TODO (vshnayder!!): read metadata from policy file(s) instead of from course.xml
************* Module lms.djangoapps.oauth2_handler.handlers
lms/djangoapps/oauth2_handler/handlers.py:134: [W0511(fixme), ] TODO: unfortunately there is not a faster and still correct way to
lms/djangoapps/oauth2_handler/handlers.py:146: [W0511(fixme), ] TODO: see :method:CourseAccessHandler.scope_course_instructor
************* Module lms.djangoapps.shoppingcart.models
lms/djangoapps/shoppingcart/models.py:1783: [W0511(fixme), ] TODO combine these three methods into one
************* Module lms.djangoapps.shoppingcart.reports
lms/djangoapps/shoppingcart/reports.py:160: [W0511(fixme), ] TODO add term (i.e. Fall 2013)?
************* Module lms.djangoapps.verify_student.views
lms/djangoapps/verify_student/views.py:622: [W0511(fixme), ] TODO (ECOM-188): Once the A/B test of decoupling verified / payment
lms/djangoapps/verify_student/views.py:1048: [W0511(fixme), ] TODO need someone to review the copy for this template
************* Module lms.envs.aws
lms/envs/aws.py:409: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module lms.envs.common
lms/envs/common.py:381: [W0511(fixme), ] TODO: Remove the rest of the sys.path modification here and in cms/envs/common.py
lms/envs/common.py:484: [W0511(fixme), ] FIXME:
lms/envs/common.py:526: [W0511(fixme), ] TODO (vshnayder): Will probably need to change as we get real access control in.
lms/envs/common.py:545: [W0511(fixme), ] FIXME: Should we be doing this truncation?
lms/envs/common.py:1369: [W0511(fixme), ] TODO: Remove this once we move data into Mongo. This is only temporary while
************* Module lms.envs.dev
lms/envs/dev.py:155: [W0511(fixme), ] TODO (cpennington): When courses are stored in a database, this
lms/envs/dev.py:164: [W0511(fixme), ] TODO (cpennington): When courses are stored in a database, this
lms/envs/dev.py:207: [W0511(fixme), ] TODO: accept more endpoints
************* Module lms.envs.test
lms/envs/test.py:124: [W0511(fixme), ] TODO (cpennington): We need to figure out how envs/test.py can inject things
************* Module lms.envs.yaml_config
lms/envs/yaml_config.py:291: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module lms.lib.comment_client.thread
lms/lib/comment_client/thread.py:115: [W0511(fixme), ] TODO: This is currently overriding Model._retrieve only to add parameters
************* Module lms.lib.courseware_search.lms_result_processor
lms/lib/courseware_search/lms_result_processor.py:69: [W0511(fixme), ] TODO: update whern changes to "cohorted-courseware" branch are merged in
************* Module xblock.runtime
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/runtime.py:711: [W0511(fixme), ] TODO: a way for this node to be a usage to an existing definition?
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/runtime.py:891: [W0511(fixme), ] TODO/Note: We eventually want to remove: hasattr(frag, 'json_init_args')
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/runtime.py:954: [W0511(fixme), ] TODO: This function will need to be extended if we want to allow:
************* Module xblock.fragment
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/fragment.py:200: [W0511(fixme), ] TODO: [rocha] should this go in the runtime?
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/fragment.py:237: [W0511(fixme), ] TODO: [rocha] aggregate and wrap css and javascript.
************* Module xblock.test.test_fields_api
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/test/test_fields_api.py:410: [I0012(locally-enabled), ] Locally enabling no-member (E1101)
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/test/test_fields_api.py:503: [I0012(locally-enabled), ] Locally enabling no-member (E1101)
************* Module xblock.reference.plugins
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/reference/plugins.py:73: [W0511(fixme), ] TODO: We need plumbing to set these
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/reference/plugins.py:122: [W0511(fixme), ] TODO: Get xblock from context, once the plumbing is piped through
PYTHONPATH=cms:cms/libcommon/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" cms contentstore course_creators models xblock_config django_require xblock | tee /edx/app/edxapp/edx-platform/reports/cms/pylint_fixme.report
************* Module contentstore
contentstore:1: [F0001(fatal), ] No module named contentstore
************* Module course_creators
course_creators:1: [F0001(fatal), ] No module named course_creators
************* Module models
models:1: [F0001(fatal), ] No module named models
************* Module xblock_config
xblock_config:1: [F0001(fatal), ] No module named xblock_config
************* Module django_require
django_require:1: [F0001(fatal), ] No module named django_require
************* Module cms.djangoapps.contentstore.tests.test_clone_course
cms/djangoapps/contentstore/tests/test_clone_course.py:25: [W0511(fixme), ] TODO - This is currently failing since clone_course doesn't handle Private content - fails on Publish
************* Module cms.djangoapps.contentstore.tests.test_contentstore
cms/djangoapps/contentstore/tests/test_contentstore.py:668: [W0511(fixme), ] TODO the below won't work for split mongo
cms/djangoapps/contentstore/tests/test_contentstore.py:1607: [W0511(fixme), ] TODO: create the same test as `test_metadata_not_persistence`,
************* Module cms.djangoapps.contentstore.views.component
cms/djangoapps/contentstore/views/component.py:264: [W0511(fixme), ] TODO: Once mixins are defined per-application, rather than per-runtime,
************* Module cms.djangoapps.contentstore.views.course
cms/djangoapps/contentstore/views/course.py:700: [W0511(fixme), ] TODO get rid of defining wiki slug in this org/course/run specific way and reconcile
************* Module cms.djangoapps.contentstore.views.helpers
cms/djangoapps/contentstore/views/helpers.py:210: [W0511(fixme), ] TODO need to fix components that are sending definition_data as strings, instead of as dicts
************* Module cms.djangoapps.contentstore.views.item
cms/djangoapps/contentstore/views/item.py:68: [W0511(fixme), ] TODO: Remove this code when Runtimes are no longer created by modulestores
cms/djangoapps/contentstore/views/item.py:150: [W0511(fixme), ] TODO: pass fields to _get_module_info and only return those
cms/djangoapps/contentstore/views/item.py:405: [W0511(fixme), ] TODO Allow any scope.content fields not just "data" (exactly like the get below this)
************* Module cms.djangoapps.contentstore.views.preview
cms/djangoapps/contentstore/views/preview.py:171: [W0511(fixme), ] TODO (cpennington): Do we want to track how instructors are using the preview problems?
************* Module cms.djangoapps.models.settings.course_details
cms/djangoapps/models/settings/course_details.py:214: [W0511(fixme), ] TODO should this use a mako template? Of course, my hope is that this is a short-term workaround for the db not storing
cms/djangoapps/models/settings/course_details.py:223: [W0511(fixme), ] TODO move to a more general util?
************* Module cms.envs.aws
cms/envs/aws.py:261: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module cms.envs.test
cms/envs/test.py:74: [W0511(fixme), ] TODO (cpennington): We need to figure out how envs/test.py can inject things into common.py so that we don't have to repeat this sort of thing
************* Module cms.envs.yaml_config
cms/envs/yaml_config.py:250: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module xblock.runtime
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/runtime.py:711: [W0511(fixme), ] TODO: a way for this node to be a usage to an existing definition?
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/runtime.py:891: [W0511(fixme), ] TODO/Note: We eventually want to remove: hasattr(frag, 'json_init_args')
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/runtime.py:954: [W0511(fixme), ] TODO: This function will need to be extended if we want to allow:
************* Module xblock.fragment
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/fragment.py:200: [W0511(fixme), ] TODO: [rocha] should this go in the runtime?
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/fragment.py:237: [W0511(fixme), ] TODO: [rocha] aggregate and wrap css and javascript.
************* Module xblock.test.test_fields_api
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/test/test_fields_api.py:410: [I0012(locally-enabled), ] Locally enabling no-member (E1101)
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/test/test_fields_api.py:503: [I0012(locally-enabled), ] Locally enabling no-member (E1101)
************* Module xblock.reference.plugins
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/reference/plugins.py:73: [W0511(fixme), ] TODO: We need plumbing to set these
/edx/app/edxapp/venvs/edxapp/src/xblock/xblock/reference/plugins.py:122: [W0511(fixme), ] TODO: Get xblock from context, once the plumbing is piped through
PYTHONPATH=common:common/libcommon/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" common cache_toolbox config_models contentserver cors_csrf course_about course_action_state course_modes dark_lang datadog django_comment_common django_future edxmako embargo enrollment external_auth geoinfo heartbeat lang_pref microsite_configuration monitoring monkey_patch oauth_exchange pipeline_js pipeline_mako request_cache reverification service_status session_inactivity_timeout static_replace status student terrain third_party_auth track util xblock_django xmodule_django calc capa chem dogstats i18n safe_lxml sandbox-packages symmath xmodule | tee /edx/app/edxapp/edx-platform/reports/common/pylint_fixme.report
************* Module cache_toolbox
cache_toolbox:1: [F0001(fatal), ] No module named cache_toolbox
************* Module config_models
config_models:1: [F0001(fatal), ] No module named config_models
************* Module contentserver
contentserver:1: [F0001(fatal), ] No module named contentserver
************* Module cors_csrf
cors_csrf:1: [F0001(fatal), ] No module named cors_csrf
************* Module course_about
course_about:1: [F0001(fatal), ] No module named course_about
************* Module course_action_state
course_action_state:1: [F0001(fatal), ] No module named course_action_state
************* Module course_modes
course_modes:1: [F0001(fatal), ] No module named course_modes
************* Module dark_lang
dark_lang:1: [F0001(fatal), ] No module named dark_lang
************* Module datadog
datadog:1: [F0001(fatal), ] No module named datadog
************* Module django_comment_common
django_comment_common:1: [F0001(fatal), ] No module named django_comment_common
************* Module django_future
django_future:1: [F0001(fatal), ] No module named django_future
************* Module edxmako
edxmako:1: [F0001(fatal), ] No module named edxmako
************* Module embargo
embargo:1: [F0001(fatal), ] No module named embargo
************* Module enrollment
enrollment:1: [F0001(fatal), ] No module named enrollment
************* Module external_auth
external_auth:1: [F0001(fatal), ] No module named external_auth
************* Module geoinfo
geoinfo:1: [F0001(fatal), ] No module named geoinfo
************* Module heartbeat
heartbeat:1: [F0001(fatal), ] No module named heartbeat
************* Module lang_pref
lang_pref:1: [F0001(fatal), ] No module named lang_pref
************* Module microsite_configuration
microsite_configuration:1: [F0001(fatal), ] No module named microsite_configuration
************* Module monitoring
monitoring:1: [F0001(fatal), ] No module named monitoring
************* Module monkey_patch
monkey_patch:1: [F0001(fatal), ] No module named monkey_patch
************* Module oauth_exchange
oauth_exchange:1: [F0001(fatal), ] No module named oauth_exchange
************* Module pipeline_js
pipeline_js:1: [F0001(fatal), ] No module named pipeline_js
************* Module pipeline_mako
pipeline_mako:1: [F0001(fatal), ] No module named pipeline_mako
************* Module request_cache
request_cache:1: [F0001(fatal), ] No module named request_cache
************* Module reverification
reverification:1: [F0001(fatal), ] No module named reverification
************* Module service_status
service_status:1: [F0001(fatal), ] No module named service_status
************* Module session_inactivity_timeout
session_inactivity_timeout:1: [F0001(fatal), ] No module named session_inactivity_timeout
************* Module static_replace
static_replace:1: [F0001(fatal), ] No module named static_replace
************* Module status
status:1: [F0001(fatal), ] No module named status
************* Module student
student:1: [F0001(fatal), ] No module named student
************* Module terrain
terrain:1: [F0001(fatal), ] No module named terrain
************* Module third_party_auth
third_party_auth:1: [F0001(fatal), ] No module named third_party_auth
************* Module track
track:1: [F0001(fatal), ] No module named track
************* Module util
util:1: [F0001(fatal), ] No module named util
************* Module xblock_django
xblock_django:1: [F0001(fatal), ] No module named xblock_django
************* Module xmodule_django
xmodule_django:1: [F0001(fatal), ] No module named xmodule_django
************* Module dogstats
dogstats:1: [F0001(fatal), ] No module named dogstats
************* Module sandbox-packages
sandbox-packages:1: [F0001(fatal), ] No module named sandbox-packages
************* Module calc.preview
common/lib/calc/calc/preview.py:141: [W0511(fixme), ] TODO turn unknown variable red or give some kind of error
common/lib/calc/calc/preview.py:170: [W0511(fixme), ] TODO turn unknown function red or give some kind of error
************* Module capa.capa_problem
common/lib/capa/capa/capa_problem.py:383: [W0511(fixme), ] TODO: figure out where to get file submissions when rescoring.
common/lib/capa/capa/capa_problem.py:554: [W0511(fixme), ] TODO (vshnayder): need real error handling, display to users
common/lib/capa/capa/capa_problem.py:570: [W0511(fixme), ] TODO (vshnayder): same as above
common/lib/capa/capa/capa_problem.py:639: [W0511(fixme), ] TODO: evaluate only python
common/lib/capa/capa/capa_problem.py:832: [W0511(fixme), ] TODO: We should make the namespaces consistent and unique (e.g. %s_problem_%i).
************* Module capa.customrender
common/lib/capa/capa/customrender.py:55: [W0511(fixme), ] TODO: why are there nested html tags here??  Why are there html tags at all, in fact?
************* Module capa.inputtypes
common/lib/capa/capa/inputtypes.py:29: [W0511(fixme), ] TODO: make hints do something
common/lib/capa/capa/inputtypes.py:31: [W0511(fixme), ] TODO: make all inputtypes actually render msg
common/lib/capa/capa/inputtypes.py:33: [W0511(fixme), ] TODO: remove unused fields (e.g. 'hidden' in a few places)
common/lib/capa/capa/inputtypes.py:35: [W0511(fixme), ] TODO: add validators so that content folks get better error messages.
common/lib/capa/capa/inputtypes.py:371: [W0511(fixme), ] TODO: allow ordering to be randomized
common/lib/capa/capa/inputtypes.py:411: [W0511(fixme), ] TODO: consolidate choicegroup, radiogroup, checkboxgroup after discussion of
common/lib/capa/capa/inputtypes.py:648: [W0511(fixme), ] TODO: 'dojs' flag is temporary, for backwards compatibility with
common/lib/capa/capa/inputtypes.py:660: [W0511(fixme), ] TODO: do math checking using ajax instead of using js, so
common/lib/capa/capa/inputtypes.py:958: [W0511(fixme), ] TODO: Why is this using self.capa_system.seed when we have self.seed???
common/lib/capa/capa/inputtypes.py:1270: [W0511(fixme), ] TODO add references to valid variables and functions
common/lib/capa/capa/inputtypes.py:1513: [W0511(fixme), ] TODO: allow ordering to be randomized
************* Module capa.responsetypes
common/lib/capa/capa/responsetypes.py:3219: [I0012(locally-enabled), ] Locally enabling invalid-all-object (E0604)
common/lib/capa/capa/responsetypes.py:469: [W0511(fixme), ] TODO FIXME
common/lib/capa/capa/responsetypes.py:497: [W0511(fixme), ] TODO this should also be fixed when the above is fixed.
common/lib/capa/capa/responsetypes.py:759: [W0511(fixme), ] TODO: handle direction and randomize
common/lib/capa/capa/responsetypes.py:1528: [W0511(fixme), ] TODO: this code seems not to be used any more since self.capa_system.filesystem doesn't exist.
common/lib/capa/capa/responsetypes.py:1914: [W0511(fixme), ] TODO: XML can override external resource (grader/queue) URL
common/lib/capa/capa/responsetypes.py:1998: [W0511(fixme), ] TODO: Get S3 pointer from the Queue
common/lib/capa/capa/responsetypes.py:2017: [W0511(fixme), ] TODO: Is there any information we want to send here?
common/lib/capa/capa/responsetypes.py:2070: [W0511(fixme), ] TODO: Find out how this is used elsewhere, if any
common/lib/capa/capa/responsetypes.py:2179: [W0511(fixme), ] TODO: handle other loncapa responses
common/lib/capa/capa/responsetypes.py:2191: [W0511(fixme), ] FIXME - hardcoded URL
common/lib/capa/capa/responsetypes.py:2198: [W0511(fixme), ] TODO: this code seems not to be used any more since self.capa_system.filesystem doesn't exist.
common/lib/capa/capa/responsetypes.py:2460: [W0511(fixme), ] TODO: allow specified ranges (i.e. integers and complex numbers) for random variables
common/lib/capa/capa/responsetypes.py:2665: [W0511(fixme), ] TODO: Compile regexp on file load
common/lib/capa/capa/responsetypes.py:3198: [W0511(fixme), ] FIXME: To be replaced by auto-registration
************* Module capa.util
common/lib/capa/capa/util.py:81: [W0511(fixme), ] TODO (vshnayder): This whole replacement thing is a big hack
************* Module capa.tests.test_html_render
common/lib/capa/capa/tests/test_html_render.py:30: [W0511(fixme), ] TODO: This test should inspect the rendered html and assert one or more things about it
************* Module chem.chemcalc
common/lib/chem/chem/chemcalc.py:399: [W0511(fixme), ] TODO: may want to be able to give student helpful feedback about why things didn't work.
************* Module symmath.formula
common/lib/symmath/symmath/formula.py:234: [W0511(fixme), ] TODO: wrap in try
************* Module xmodule.abtest_module
common/lib/xmodule/xmodule/abtest_module.py:78: [W0511(fixme), ] TODO (cpennington): Use Groups should be a first class object, rather than being
************* Module xmodule.capa_base
common/lib/xmodule/xmodule/capa_base.py:1082: [I0012(locally-enabled), ] Locally enabling too-many-statements (R0915)
common/lib/xmodule/xmodule/capa_base.py:196: [W0511(fixme), ] TODO: someday it should be possible to not duplicate this definition here
common/lib/xmodule/xmodule/capa_base.py:239: [W0511(fixme), ] TODO (vshnayder): move as much as possible of this work and error
common/lib/xmodule/xmodule/capa_base.py:255: [W0511(fixme), ] TODO (vshnayder): do modules need error handlers too?
common/lib/xmodule/xmodule/capa_base.py:259: [W0511(fixme), ] TODO (vshnayder): This logic should be general, not here--and may
common/lib/xmodule/xmodule/capa_base.py:433: [W0511(fixme), ] TODO: need a way to get the customized words into the list of
common/lib/xmodule/xmodule/capa_base.py:544: [W0511(fixme), ] TODO (vshnayder): another switch on DEBUG.
common/lib/xmodule/xmodule/capa_base.py:566: [W0511(fixme), ] TODO: Use regex, e.g. 'dynamath' is suffix at end of answer_id
************* Module xmodule.capa_module
common/lib/xmodule/xmodule/capa_module.py:155: [W0511(fixme), ] TODO (cpennington): Delete this method once all fall 2012 course are being
************* Module xmodule.course_module
common/lib/xmodule/xmodule/course_module.py:695: [W0511(fixme), ] TODO get rid of this as soon as possible or potentially build in a robust
common/lib/xmodule/xmodule/course_module.py:706: [W0511(fixme), ] TODO: This is a quick kludge to allow CS50 (and other courses) to
common/lib/xmodule/xmodule/course_module.py:718: [W0511(fixme), ] TODO: same as above, intended to let internal CS50 hide the progress tab
************* Module xmodule.gst_module
common/lib/xmodule/xmodule/gst_module.py:79: [W0511(fixme), ] TODO - where to store them - outside xmodule?
************* Module xmodule.html_module
common/lib/xmodule/xmodule/html_module.py:190: [W0511(fixme), ] TODO (cpennington): If the file doesn't exist at the right path,
common/lib/xmodule/xmodule/html_module.py:213: [W0511(fixme), ] TODO (ichuang): remove this after migration
common/lib/xmodule/xmodule/html_module.py:225: [W0511(fixme), ] TODO (vshnayder): make export put things in the right places.
************* Module xmodule.library_content_module
common/lib/xmodule/xmodule/library_content_module.py:203: [W0511(fixme), ] TODO: this doesn't save from the LMS "Progress" page.
common/lib/xmodule/xmodule/library_content_module.py:336: [W0511(fixme), ] TODO: change this to action_runtime_event='...' once the unit page supports that feature.
************* Module xmodule.library_root_xblock
common/lib/xmodule/xmodule/library_root_xblock.py:63: [W0511(fixme), ] TODO sort children
************* Module xmodule.peer_grading_module
common/lib/xmodule/xmodule/peer_grading_module.py:619: [I0010(bad-inline-option), ] Unable to consider inline option 'disable-unused-variable'
************* Module xmodule.poll_module
common/lib/xmodule/xmodule/poll_module.py:64: [W0511(fixme), ] FIXME: fix this, when xblock will support mutable types.
common/lib/xmodule/xmodule/poll_module.py:85: [W0511(fixme), ] FIXME: fix this, when xblock will support mutable types.
common/lib/xmodule/xmodule/poll_module.py:113: [W0511(fixme), ] FIXME: hack for resolving caching `default={}` during definition
common/lib/xmodule/xmodule/poll_module.py:120: [W0511(fixme), ] FIXME: fix this, when xblock support mutable types.
************* Module xmodule.seq_module
common/lib/xmodule/xmodule/seq_module.py:92: [W0511(fixme), ] TODO: Cache progress or children array?
common/lib/xmodule/xmodule/seq_module.py:98: [W0511(fixme), ] TODO: bounds checking
************* Module xmodule.split_test_module
common/lib/xmodule/xmodule/split_test_module.py:332: [W0511(fixme), ] TODO: use publish instead, when publish is wired to the tracking logs
************* Module xmodule.template_module
common/lib/xmodule/xmodule/template_module.py:49: [W0511(fixme), ] TODO (vshnayder): better exception type
************* Module xmodule.templates
common/lib/xmodule/xmodule/templates.py:24: [W0511(fixme), ] TODO use memcache to memoize w/ expiration
************* Module xmodule.vertical_module
common/lib/xmodule/xmodule/vertical_module.py:60: [W0511(fixme), ] TODO: Cache progress or children array?
common/lib/xmodule/xmodule/vertical_module.py:84: [W0511(fixme), ] TODO (victor): Does this need its own definition_to_xml method?  Otherwise it looks
************* Module xmodule.word_cloud_module
common/lib/xmodule/xmodule/word_cloud_module.py:199: [W0511(fixme), ] FIXME: we must use raw JSON, not a post data (multipart/form-data)
common/lib/xmodule/xmodule/word_cloud_module.py:205: [W0511(fixme), ] FIXME: fix this, when xblock will support mutable types.
************* Module xmodule.x_module
common/lib/xmodule/xmodule/x_module.py:673: [W0511(fixme), ] TODO: Once we're in a system where this returns a mix of XModuleDescriptors
************* Module xmodule.xml_module
common/lib/xmodule/xmodule/xml_module.py:207: [W0511(fixme), ] TODO (cpennington): If the file doesn't exist at the right path,
************* Module xmodule.contentstore.content
common/lib/xmodule/xmodule/contentstore/content.py:124: [W0511(fixme), ] TODO - re-address this once LMS-11198 is tackled.
common/lib/xmodule/xmodule/contentstore/content.py:168: [W0511(fixme), ] TODO - re-address this once LMS-11198 is tackled.
************* Module xmodule.contentstore.mongo
common/lib/xmodule/xmodule/contentstore/mongo.py:156: [W0511(fixme), ] TODO: On 6/19/14, I had to put a try/except around this
************* Module xmodule.modulestore.courseware_index
common/lib/xmodule/xmodule/modulestore/courseware_index.py:39: [W0511(fixme), ] TODO - inline for now, need to move this out to a celery task
************* Module xmodule.modulestore.split_migrator
common/lib/xmodule/xmodule/modulestore/split_migrator.py:77: [W0511(fixme), ] TODO: This should be merged back into the above transaction, but can't be until split.py
************* Module xmodule.modulestore.xml
common/lib/xmodule/xmodule/modulestore/xml.py:46: [W0511(fixme), ] TODO (cpennington): Remove this once all fall 2012 courses have been imported
common/lib/xmodule/xmodule/modulestore/xml.py:136: [W0511(fixme), ] TODO (vshnayder): We may want to enable this once course repos are cleaned up.
common/lib/xmodule/xmodule/modulestore/xml.py:154: [W0511(fixme), ] TODO (vshnayder): if the tag is a pointer tag, this will
common/lib/xmodule/xmodule/modulestore/xml.py:167: [W0511(fixme), ] TODO (cpennington): Remove this once all fall 2012 courses
common/lib/xmodule/xmodule/modulestore/xml.py:231: [W0511(fixme), ] TODO (vshnayder): we are somewhat architecturally confused in the loading code:
common/lib/xmodule/xmodule/modulestore/xml.py:428: [W0511(fixme), ] TODO (cpennington): Remove this once all fall 2012 courses have
************* Module xmodule.modulestore.mongo.base
common/lib/xmodule/xmodule/modulestore/mongo/base.py:502: [W0511(fixme), ] TODO (cpennington): Enable non-filesystem filestores
common/lib/xmodule/xmodule/modulestore/mongo/base.py:680: [W0511(fixme), ] FIXME this is wrong. If the child was moved in draft from one parent to the other, it will
common/lib/xmodule/xmodule/modulestore/mongo/base.py:914: [W0511(fixme), ] TODO kill this
************* Module xmodule.modulestore.mongo.draft
common/lib/xmodule/xmodule/modulestore/mongo/draft.py:376: [W0511(fixme), ] TODO (dhm) I don't think this needs to recurse anymore but can convert each unit on demand.
************* Module xmodule.modulestore.split_mongo.id_manager
common/lib/xmodule/xmodule/modulestore/split_mongo/id_manager.py:11: [W0511(fixme), ] TODO: Migrate split_mongo to use this class for all key mapping/creation.
************* Module xmodule.modulestore.split_mongo.split
common/lib/xmodule/xmodule/modulestore/split_mongo/split.py:131: [W0511(fixme), ] TODO: This needs to track which branches have actually been modified/versioned,
common/lib/xmodule/xmodule/modulestore/split_mongo/split.py:820: [W0511(fixme), ] TODO should this raise an exception if branch was provided?
common/lib/xmodule/xmodule/modulestore/split_mongo/split.py:1165: [W0511(fixme), ] TODO figure out a way to make this info accessible from the course descriptor
common/lib/xmodule/xmodule/modulestore/split_mongo/split.py:1228: [W0511(fixme), ] TODO if depth is significant, it may make sense to get all that have the same original_version
common/lib/xmodule/xmodule/modulestore/split_mongo/split.py:1300: [W0511(fixme), ] TODO implement
************* Module xmodule.modulestore.split_mongo.split_draft
common/lib/xmodule/xmodule/modulestore/split_mongo/split_draft.py:350: [W0511(fixme), ] TODO Instead, the for_branch implementation should be fixed in the Opaque Keys library.
************* Module xmodule.modulestore.tests.django_utils
common/lib/xmodule/xmodule/modulestore/tests/django_utils.py:201: [W0511(fixme), ] TODO: acutally mock out the modulestore for this in a subsequent PR.
common/lib/xmodule/xmodule/modulestore/tests/django_utils.py:353: [W0511(fixme), ] TODO remove version_agnostic() when we impl the single transaction
************* Module xmodule.modulestore.tests.test_mixed_modulestore
common/lib/xmodule/xmodule/modulestore/tests/test_mixed_modulestore.py:16: [W0511(fixme), ] TODO remove this import and the configuration -- xmodule should not depend on django!
************* Module xmodule.modulestore.tests.test_mongo
common/lib/xmodule/xmodule/modulestore/tests/test_mongo.py:9: [I0012(locally-enabled), ] Locally enabling no-name-in-module (E0611)
common/lib/xmodule/xmodule/modulestore/tests/test_mongo.py:55: [W0511(fixme), ] TODO (vshnayder): will need a real fs_root for testing load_item
************* Module xmodule.modulestore.tests.test_mongo_call_count
common/lib/xmodule/xmodule/modulestore/tests/test_mongo_call_count.py:116: [W0511(fixme), ] TODO: The call count below seems like a bug - should be 4?
************* Module xmodule.modulestore.tests.test_split_modulestore
common/lib/xmodule/xmodule/modulestore/tests/test_split_modulestore.py:1721: [W0511(fixme), ] FIXME LMS-11376
common/lib/xmodule/xmodule/modulestore/tests/test_split_modulestore.py:1727: [W0511(fixme), ] FIXME LMS-11376
************* Module xmodule.open_ended_grading_classes.open_ended_module
common/lib/xmodule/xmodule/open_ended_grading_classes/open_ended_module.py:423: [W0511(fixme), ] TODO (vshnayder): design and document the details of this format so
common/lib/xmodule/xmodule/open_ended_grading_classes/open_ended_module.py:759: [W0511(fixme), ] TODO: Remove need for cmap
************* Module xmodule.tests.test_capa_module
common/lib/xmodule/xmodule/tests/test_capa_module.py:137: [W0511(fixme), ] TODO: probably better to actually set the internal state properly, but...
common/lib/xmodule/xmodule/tests/test_capa_module.py:496: [W0511(fixme), ] TODO: pep8 thinks the following line has invalid syntax
************* Module xmodule.tests.test_graders
common/lib/xmodule/xmodule/tests/test_graders.py:237: [W0511(fixme), ] TODO: How do we test failure cases? The parser only logs an error when
************* Module xmodule.tests.test_randomize_module
common/lib/xmodule/xmodule/tests/test_randomize_module.py:44: [W0511(fixme), ] TODO: add tests that create a module and check.  Passing state is a good way to
************* Module xmodule.tests.test_xblock_wrappers
common/lib/xmodule/xmodule/tests/test_xblock_wrappers.py:52: [W0511(fixme), ] TODO: Add more types of sample data
common/lib/xmodule/xmodule/tests/test_xblock_wrappers.py:70: [W0511(fixme), ] TODO: Add more types of sample data
************* Module xmodule.video_module.video_module
common/lib/xmodule/xmodule/video_module/video_module.py:237: [W0511(fixme), ] TODO(ali@edx.org): Delete this after the CDN experiment has completed.
common/lib/xmodule/xmodule/video_module/video_module.py:276: [W0511(fixme), ] TODO: Later on the value 1500 should be taken from some global
************* Module xmodule.video_module.video_xfields
common/lib/xmodule/xmodule/video_module/video_xfields.py:28: [W0511(fixme), ] TODO: This should be moved to Scope.content, but this will
PYTHONPATH=pavelib:pavelib/libcommon/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" pavelib | tee /edx/app/edxapp/edx-platform/reports/pavelib/pylint_fixme.report
************* Module pavelib.acceptance_test
pavelib/acceptance_test.py:11: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.bok_choy
pavelib/bok_choy.py:15: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.i18n
pavelib/i18n.py:12: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.tests
pavelib/tests.py:14: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.utils.envs
pavelib/utils/envs.py:94: [W0511(fixme), ] TODO:  Store this as a dict. Order seems to matter for some
************* Module pavelib.utils.test.bokchoy_utils
pavelib/utils/test/bokchoy_utils.py:16: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
pavelib/utils/test/bokchoy_utils.py:83: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.utils.test.suites.acceptance_suite
pavelib/utils/test/suites/acceptance_suite.py:80: [W0511(fixme), ] TODO fix Acceptance tests with Split (LMS-11300)
************* Module pavelib.utils.test.suites.bokchoy_suite
pavelib/utils/test/suites/bokchoy_suite.py:13: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.utils.test.suites.suite
pavelib/utils/test/suites/suite.py:11: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
PYTHONPATH=scripts:scripts/libcommon/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" scripts | tee /edx/app/edxapp/edx-platform/reports/scripts/pylint_fixme.report
************* 
scripts/__init__.py:1: [F0010(parse-error), ] error while code parsing: Unable to load file 'scripts/__init__.py' ([Errno 2] No such file or directory: 'scripts/__init__.py')
PYTHONPATH=docs:docs/libcommon/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" docs | tee /edx/app/edxapp/edx-platform/reports/docs/pylint_fixme.report
Number of pylint fixmes: 329
