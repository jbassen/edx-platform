---> pavelib.quality.find_fixme
---> pavelib.prereqs.install_python_prereqs
Python prereqs unchanged, skipping...
PYTHONPATH=lms:lms/lib:common/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" lms | tee /edx/app/edxapp/edx-platform/reports/lms/pylint_fixme.report
************* Module lms.urls
lms/urls.py:36: [W0511(fixme), ] TODO: Is this used anymore? What is STATIC_GRAB?
lms/urls.py:49: [W0511(fixme), ] TODO: Replace with Mako-ized views
lms/urls.py:184: [W0511(fixme), ] TODO: (bridger) The copyright has been removed until it is updated for edX
lms/urls.py:262: [W0511(fixme), ] TODO: for now, this is the endpoint of an ajax replay
lms/urls.py:274: [W0511(fixme), ] TODO: These views need to be updated before they work
lms/urls.py:276: [W0511(fixme), ] TODO: We should probably remove the circuit package. I believe it was only used in the old way of saving wiki circuits for the wiki
lms/urls.py:301: [W0511(fixme), ] TODO arjun remove when custom tabs in place, see courseware/courses.py
************* Module lms.djangoapps.bulk_email.forms
lms/djangoapps/bulk_email/forms.py:40: [W0511(fixme), ] TODO: add more validation here, including the set of known tags
************* Module lms.djangoapps.certificates.queue
lms/djangoapps/certificates/queue.py:123: [W0511(fixme), ] TODO: when del_cert is implemented and plumbed through certificates
************* Module lms.djangoapps.commerce.tests
lms/djangoapps/commerce/tests.py:82: [W0511(fixme), ] TODO Verify this is the best method to create CourseMode objects.
lms/djangoapps/commerce/tests.py:83: [W0511(fixme), ] TODO Find/create constants for the modes.
lms/djangoapps/commerce/tests.py:111: [W0511(fixme), ] TODO Test inactive courses, and those not open for enrollment.
lms/djangoapps/commerce/tests.py:203: [W0511(fixme), ] TODO Eventually we should NOT be enrolling users directly from this view.
************* Module lms.djangoapps.commerce.views
lms/djangoapps/commerce/views.py:136: [W0511(fixme), ] TODO Before this functionality is fully rolled-out, this branch should be updated to NOT enroll the
************* Module lms.djangoapps.course_wiki.editors
lms/djangoapps/course_wiki/editors.py:28: [W0511(fixme), ] TODO use the help_text field of edit form instead of rendering a template
************* Module lms.djangoapps.courseware.courses
lms/djangoapps/courseware/courses.py:65: [W0511(fixme), ] TODO please rename this function to get_course_by_key at next opportunity!
lms/djangoapps/courseware/courses.py:188: [W0511(fixme), ] TODO: Remove number, instructors from this list
lms/djangoapps/courseware/courses.py:294: [W0511(fixme), ] TODO: Fix this such that these are pulled in as extra course-specific tabs.
lms/djangoapps/courseware/courses.py:338: [W0511(fixme), ] TODO: Clean up how 'error' is done.
************* Module lms.djangoapps.courseware.grades
lms/djangoapps/courseware/grades.py:206: [W0511(fixme), ] TODO: We need the request to pass into here. If we could forego that, our arguments
lms/djangoapps/courseware/grades.py:298: [W0511(fixme), ] TODO: This method is not very good. It was written in the old course style and
lms/djangoapps/courseware/grades.py:326: [W0511(fixme), ] TODO: We need the request to pass into here. If we could
************* Module lms.djangoapps.courseware.module_render
lms/djangoapps/courseware/module_render.py:83: [W0511(fixme), ] TODO: course_id and course_key are used interchangeably in this file, which is wrong.
lms/djangoapps/courseware/module_render.py:307: [W0511(fixme), ] TODO: Queuename should be derived from 'course_settings.json' of each course
lms/djangoapps/courseware/module_render.py:348: [W0511(fixme), ] TODO: fix this so that make_xqueue_callback uses the descriptor passed into
lms/djangoapps/courseware/module_render.py:526: [W0511(fixme), ] TODO (cpennington): When modules are shared between courses, the static
lms/djangoapps/courseware/module_render.py:581: [W0511(fixme), ] TODO (cpennington): Figure out how to share info between systems
lms/djangoapps/courseware/module_render.py:587: [W0511(fixme), ] TODO (cpennington): This should be removed when all html from
lms/djangoapps/courseware/module_render.py:614: [W0511(fixme), ] TODO: When we merge the descriptor and module systems, we can stop reaching into the mixologist (cpennington)
************* Module lms.djangoapps.courseware.views
lms/djangoapps/courseware/views.py:91: [W0511(fixme), ] TODO: Rewrite in Django
lms/djangoapps/courseware/views.py:279: [W0511(fixme), ] TODO: clearly this needs to be something other than the username
lms/djangoapps/courseware/views.py:355: [W0511(fixme), ] TODO (vshnayder): do course instructors need to be registered to see course?
lms/djangoapps/courseware/views.py:733: [W0511(fixme), ] TODO arjun: remove when custom tabs in place, see courseware/syllabus.py
************* Module lms.djangoapps.courseware.management.commands.export_course
lms/djangoapps/courseware/management/commands/export_course.py:87: [W0511(fixme), ] TODO: Once we support courses with unicode characters, we will need to revisit this.
************* Module lms.djangoapps.courseware.tests.factories
lms/djangoapps/courseware/tests/factories.py:11: [I0012(locally-enabled), ] Locally enabling unused-import (W0611)
lms/djangoapps/courseware/tests/factories.py:122: [I0012(locally-enabled), ] Locally enabling unused-argument (W0613)
lms/djangoapps/courseware/tests/factories.py:28: [W0511(fixme), ] TODO fix this (course_id and location are invalid names as constants, and course_id should really be COURSE_KEY)
************* Module lms.djangoapps.courseware.tests.test_access
lms/djangoapps/courseware/tests/test_access.py:117: [W0511(fixme), ] TODO: override DISABLE_START_DATES and test the start date branch of the method
************* Module lms.djangoapps.courseware.tests.test_courses
lms/djangoapps/courseware/tests/test_courses.py:154: [W0511(fixme), ] TODO: this test relies on the specific setup of the toy course.
************* Module lms.djangoapps.courseware.tests.test_module_render
lms/djangoapps/courseware/tests/test_module_render.py:80: [W0511(fixme), ] TODO: this test relies on the specific setup of the toy course.
************* Module lms.djangoapps.courseware.tests.test_view_authentication
lms/djangoapps/courseware/tests/test_view_authentication.py:90: [W0511(fixme), ] TODO (vshnayder): If this is not the behavior we want, will need
************* Module lms.djangoapps.courseware.tests.test_views
lms/djangoapps/courseware/tests/test_views.py:225: [W0511(fixme), ] TODO add a test for invalid location
lms/djangoapps/courseware/tests/test_views.py:226: [W0511(fixme), ] TODO add a test for no data *
lms/djangoapps/courseware/tests/test_views.py:258: [W0511(fixme), ] TODO: Remove the dependency on MakoMiddleware (by making the views explicitly supply a RequestContext)
lms/djangoapps/courseware/tests/test_views.py:286: [W0511(fixme), ] TODO: this needs to be changed once we figure out how to
************* Module lms.djangoapps.django_comment_client.utils
lms/djangoapps/django_comment_client/utils.py:43: [W0511(fixme), ] TODO should we be checking if d1 and d2 have the same keys with different values?
lms/djangoapps/django_comment_client/utils.py:214: [W0511(fixme), ] TODO.  BUG! : course location is not unique across multiple course runs!
lms/djangoapps/django_comment_client/utils.py:300: [W0511(fixme), ] TODO: RENAME
lms/djangoapps/django_comment_client/utils.py:318: [W0511(fixme), ] TODO: RENAME
************* Module lms.djangoapps.django_comment_client.base.views
lms/djangoapps/django_comment_client/base/views.py:639: [W0511(fixme), ] TODO authorization
************* Module lms.djangoapps.django_comment_client.forum.tests
lms/djangoapps/django_comment_client/forum/tests.py:364: [W0511(fixme), ] TODO: update this once django cache is disabled in tests
************* Module lms.djangoapps.django_comment_client.forum.views
lms/djangoapps/django_comment_client/forum/views.py:98: [W0511(fixme), ] TODO: After the comment service is updated this can just be user.default_sort_key because the service returns the default value
lms/djangoapps/django_comment_client/forum/views.py:233: [W0511(fixme), ] TODO: Standardize on 'discussion_data' vs 'threads'
lms/djangoapps/django_comment_client/forum/views.py:345: [W0511(fixme), ] TODO: What is this?
lms/djangoapps/django_comment_client/forum/views.py:350: [W0511(fixme), ] TODO: Why pass both course and course.id to template?
lms/djangoapps/django_comment_client/forum/views.py:378: [W0511(fixme), ] TODO: Allow sorting?
lms/djangoapps/django_comment_client/forum/views.py:490: [W0511(fixme), ] TODO remove non-AJAX support, it does not appear to be used and does not appear to work.
************* Module lms.djangoapps.foldit.views
lms/djangoapps/foldit/views.py:91: [W0511(fixme), ] TODO: is this the right string?
lms/djangoapps/foldit/views.py:170: [W0511(fixme), ] TODO: this is just in this request...
************* Module lms.djangoapps.instructor.enrollment
lms/djangoapps/instructor/enrollment.py:258: [W0511(fixme), ] TODO: Use request.build_absolute_uri rather than '{proto}://{site}{path}'.format
************* Module lms.djangoapps.instructor.hint_manager
lms/djangoapps/instructor/hint_manager.py:93: [W0511(fixme), ] FIXME: we need to figure out how to do this with opaque keys
************* Module lms.djangoapps.instructor.tests.test_api
lms/djangoapps/instructor/tests/test_api.py:254: [W0511(fixme), ] TODO: make these work
lms/djangoapps/instructor/tests/test_api.py:281: [W0511(fixme), ] TODO: make these work
lms/djangoapps/instructor/tests/test_api.py:292: [W0511(fixme), ] TODO: make this work
************* Module lms.djangoapps.instructor.views.api
lms/djangoapps/instructor/views/api.py:1438: [W0511(fixme), ] TODO: the User.objects query and CSV generation here could be
************* Module lms.djangoapps.instructor.views.legacy
lms/djangoapps/instructor/views/legacy.py:757: [W0511(fixme), ] TODO (ichuang) encode Score as dict instead of as list, so score[0] -> score['earned']
lms/djangoapps/instructor/views/legacy.py:825: [W0511(fixme), ] TODO: Use request.build_absolute_uri rather than '{proto}://{site}{path}'.format
************* Module lms.djangoapps.licenses.models
lms/djangoapps/licenses/models.py:47: [W0511(fixme), ] TODO: temporary fix for when somehow a user got more that one license.
lms/djangoapps/licenses/models.py:80: [W0511(fixme), ] TODO [rocha]look if someone has unenrolled from the class
************* Module lms.djangoapps.lms_migration.management.commands.create_groups
lms/djangoapps/lms_migration/management/commands/create_groups.py:38: [W0511(fixme), ] TODO (vshnayder!!): read metadata from policy file(s) instead of from course.xml
************* Module lms.djangoapps.oauth2_handler.handlers
lms/djangoapps/oauth2_handler/handlers.py:134: [W0511(fixme), ] TODO: unfortunately there is not a faster and still correct way to
lms/djangoapps/oauth2_handler/handlers.py:146: [W0511(fixme), ] TODO: see :method:CourseAccessHandler.scope_course_instructor
************* Module lms.djangoapps.shoppingcart.models
lms/djangoapps/shoppingcart/models.py:1783: [W0511(fixme), ] TODO combine these three methods into one
************* Module lms.djangoapps.shoppingcart.reports
lms/djangoapps/shoppingcart/reports.py:160: [W0511(fixme), ] TODO add term (i.e. Fall 2013)?
************* Module lms.djangoapps.verify_student.views
lms/djangoapps/verify_student/views.py:622: [W0511(fixme), ] TODO (ECOM-188): Once the A/B test of decoupling verified / payment
lms/djangoapps/verify_student/views.py:1048: [W0511(fixme), ] TODO need someone to review the copy for this template
************* Module lms.envs.aws
lms/envs/aws.py:409: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module lms.envs.common
lms/envs/common.py:381: [W0511(fixme), ] TODO: Remove the rest of the sys.path modification here and in cms/envs/common.py
lms/envs/common.py:484: [W0511(fixme), ] FIXME:
lms/envs/common.py:526: [W0511(fixme), ] TODO (vshnayder): Will probably need to change as we get real access control in.
lms/envs/common.py:545: [W0511(fixme), ] FIXME: Should we be doing this truncation?
lms/envs/common.py:1369: [W0511(fixme), ] TODO: Remove this once we move data into Mongo. This is only temporary while
************* Module lms.envs.dev
lms/envs/dev.py:155: [W0511(fixme), ] TODO (cpennington): When courses are stored in a database, this
lms/envs/dev.py:164: [W0511(fixme), ] TODO (cpennington): When courses are stored in a database, this
lms/envs/dev.py:207: [W0511(fixme), ] TODO: accept more endpoints
************* Module lms.envs.test
lms/envs/test.py:124: [W0511(fixme), ] TODO (cpennington): We need to figure out how envs/test.py can inject things
************* Module lms.envs.yaml_config
lms/envs/yaml_config.py:291: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module lms.lib.comment_client.thread
lms/lib/comment_client/thread.py:115: [W0511(fixme), ] TODO: This is currently overriding Model._retrieve only to add parameters
************* Module lms.lib.courseware_search.lms_result_processor
lms/lib/courseware_search/lms_result_processor.py:69: [W0511(fixme), ] TODO: update whern changes to "cohorted-courseware" branch are merged in
PYTHONPATH=cms:cms/lib:common/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" cms | tee /edx/app/edxapp/edx-platform/reports/cms/pylint_fixme.report
************* Module cms.djangoapps.contentstore.tests.test_clone_course
cms/djangoapps/contentstore/tests/test_clone_course.py:25: [W0511(fixme), ] TODO - This is currently failing since clone_course doesn't handle Private content - fails on Publish
************* Module cms.djangoapps.contentstore.tests.test_contentstore
cms/djangoapps/contentstore/tests/test_contentstore.py:668: [W0511(fixme), ] TODO the below won't work for split mongo
cms/djangoapps/contentstore/tests/test_contentstore.py:1607: [W0511(fixme), ] TODO: create the same test as `test_metadata_not_persistence`,
************* Module cms.djangoapps.contentstore.views.component
cms/djangoapps/contentstore/views/component.py:264: [W0511(fixme), ] TODO: Once mixins are defined per-application, rather than per-runtime,
************* Module cms.djangoapps.contentstore.views.course
cms/djangoapps/contentstore/views/course.py:700: [W0511(fixme), ] TODO get rid of defining wiki slug in this org/course/run specific way and reconcile
************* Module cms.djangoapps.contentstore.views.helpers
cms/djangoapps/contentstore/views/helpers.py:210: [W0511(fixme), ] TODO need to fix components that are sending definition_data as strings, instead of as dicts
************* Module cms.djangoapps.contentstore.views.item
cms/djangoapps/contentstore/views/item.py:68: [W0511(fixme), ] TODO: Remove this code when Runtimes are no longer created by modulestores
cms/djangoapps/contentstore/views/item.py:150: [W0511(fixme), ] TODO: pass fields to _get_module_info and only return those
cms/djangoapps/contentstore/views/item.py:405: [W0511(fixme), ] TODO Allow any scope.content fields not just "data" (exactly like the get below this)
************* Module cms.djangoapps.contentstore.views.preview
cms/djangoapps/contentstore/views/preview.py:171: [W0511(fixme), ] TODO (cpennington): Do we want to track how instructors are using the preview problems?
************* Module cms.djangoapps.models.settings.course_details
cms/djangoapps/models/settings/course_details.py:214: [W0511(fixme), ] TODO should this use a mako template? Of course, my hope is that this is a short-term workaround for the db not storing
cms/djangoapps/models/settings/course_details.py:223: [W0511(fixme), ] TODO move to a more general util?
************* Module cms.envs.aws
cms/envs/aws.py:261: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
************* Module cms.envs.test
cms/envs/test.py:74: [W0511(fixme), ] TODO (cpennington): We need to figure out how envs/test.py can inject things into common.py so that we don't have to repeat this sort of thing
************* Module cms.envs.yaml_config
cms/envs/yaml_config.py:250: [W0511(fixme), ] TODO: deprecated (compatibility with previous settings)
PYTHONPATH=common:common/lib:common/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" common | tee /edx/app/edxapp/edx-platform/reports/common/pylint_fixme.report
PYTHONPATH=pavelib:pavelib/lib:common/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" pavelib | tee /edx/app/edxapp/edx-platform/reports/pavelib/pylint_fixme.report
************* Module pavelib.acceptance_test
pavelib/acceptance_test.py:11: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.bok_choy
pavelib/bok_choy.py:15: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.i18n
pavelib/i18n.py:12: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.tests
pavelib/tests.py:14: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.utils.envs
pavelib/utils/envs.py:94: [W0511(fixme), ] TODO:  Store this as a dict. Order seems to matter for some
************* Module pavelib.utils.test.bokchoy_utils
pavelib/utils/test/bokchoy_utils.py:16: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
pavelib/utils/test/bokchoy_utils.py:83: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.utils.test.suites.acceptance_suite
pavelib/utils/test/suites/acceptance_suite.py:80: [W0511(fixme), ] TODO fix Acceptance tests with Split (LMS-11300)
************* Module pavelib.utils.test.suites.bokchoy_suite
pavelib/utils/test/suites/bokchoy_suite.py:13: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
************* Module pavelib.utils.test.suites.suite
pavelib/utils/test/suites/suite.py:11: [I0022(deprecated-pragma), ] Pragma "disable-msg" is deprecated, use "disable" instead
PYTHONPATH=scripts:scripts/lib:common/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" scripts | tee /edx/app/edxapp/edx-platform/reports/scripts/pylint_fixme.report
************* 
scripts/__init__.py:1: [F0010(parse-error), ] error while code parsing: Unable to load file 'scripts/__init__.py' ([Errno 2] No such file or directory: 'scripts/__init__.py')
PYTHONPATH=docs:docs/lib:common/djangoapps:common/lib pylint --disable R,C,W,E --enable=fixme --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" docs | tee /edx/app/edxapp/edx-platform/reports/docs/pylint_fixme.report
Number of pylint fixmes: 115
